# You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:

#     b[0] is equal to a[0];
#     b[1] is equal to the last element of a;
#     b[2] is equal to a[1];
#     b[3] is equal to the second-last element of a;
#     and so on.

# Your task is to determine whether the new array b is sorted in strictly ascending order or not.
# a = [1, 3, 5, 6, 4, 2]

# initialize b
# generate b by looping over a by index ish...
    # start with i = 0 and insert at beginning
    # append a[-(i + 1)]
    # increment i
# return b == sorted(a)

def do_sort(a):

    if not a:
        return []

    if len(a) == 1:
        return a

    else:
        return [a[0], a[-1]] + do_sort(a[1:-1])

# print(do_sort([1, 3, 5, 6, 4, 2]))
# print(do_sort([1]))
# print(do_sort([-52, 2, 31, 56, 47, 29, -35]))
print(do_sort([-92, -23, 0, 45, 89, 96, 99, 95, 89, 41, -17, -48]))

def alternatingSort(a):

    #first check for doubles:
    if len(a) > len(set(a)):
        return False

    return do_sort(a) == sorted(a)

# print(alternatingSort([1, 3, 5, 6, 4, 2]))
# print(alternatingSort([1]))
print(alternatingSort([-92, -23, 0, 45, 89, 96, 99, 95, 89, 41, -17, -48]))